EnableRCS, profileIndex, ToggleKey, tickRate = true, 1, "CapsLock", 7
local RequireToggle, recoilProfiles = true, { --DO NOT EDIT ABOVE TEXT IT IS THE SCRIPT LOGIC
    {
        name = "one",
        stages = {
            {strength = 6, horizontal = 8, duration = 300},
            {strength = 7, horizontal = 8.5, duration = 300},
            {strength = 8, horizontal = 9, duration = 600},
        }
    },
    {
        name = "two",
        stages = {
            {strength = 4, horizontal = 5, duration = 200},
            {strength = 6, horizontal = 7, duration = 500},
            {strength = 7, horizontal = 10, duration = 800},
        }
    },
    
  --[[
  Copy below and paste for new characters
    {
        name = "three",
        stages = {
            {strength = 0, horizontal = 0, duration = 100},
            {strength = 0, horizontal = 0, duration = 100},
            {strength = 0, horizontal = 0, duration = 100},
        }
    },

  Copy above and paste for new characters
    ]]
}
--DO NOT EDIT BELOW TEXT IT IS THE LOGIC OF THE SCRIPT ITSELF
EnablePrimaryMouseButtonEvents(true)
local function logProfile() OutputLogMessage("Recoil Profile: %s\n", recoilProfiles[profileIndex].name) end
logProfile()

function OnEvent(event, arg)
    if event == "MOUSE_BUTTON_PRESSED" then
        if arg == 4 then profileIndex = (profileIndex - 2) % #recoilProfiles + 1 logProfile() end
        if arg == 5 then profileIndex = profileIndex % #recoilProfiles + 1 logProfile() end
    end

    if EnableRCS and (not RequireToggle or not IsKeyLockOn(ToggleKey)) and IsMouseButtonPressed(3) then
        while IsMouseButtonPressed(3) do
            if IsMouseButtonPressed(1) then
                local p, t0, vAcc, hAcc = recoilProfiles[profileIndex], GetRunningTime(), 0, 0
                repeat
                    local e, t, s = GetRunningTime() - t0, 0, p.stages[#p.stages]
                    for i, stage in ipairs(p.stages) do
                        t = t + stage.duration
                        if e < t then s = stage break end
                    end
                    vAcc, hAcc = vAcc + s.strength, hAcc + s.horizontal
                    local dy, dx = math.floor(vAcc), math.floor(hAcc)
                    vAcc, hAcc = vAcc - dy, hAcc - dx
                    if dx ~= 0 or dy ~= 0 then MoveMouseRelative(dx, dy) end
                    Sleep(tickRate)
                until not IsMouseButtonPressed(1) or not IsMouseButtonPressed(3)
            end
        end
    end
end

-- Recoil Script by GoneThx - https://github.com/GoneThx

-- This tool is written for educational purposes only, use it at your own risk/responsibility.

-- âœ¨ You can delete this HOW TO section once you fully understand it. 
-- If you remove it, make sure to remove the whole section to avoid issues.
